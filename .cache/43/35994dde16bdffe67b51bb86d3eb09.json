{"id":"node_modules/core-js/internals/regexp-flags.js","dependencies":[{"name":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\package.json","includedInParent":true,"mtime":1652088393021},{"name":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1652087954091},{"name":"../internals/an-object","loc":{"line":2,"column":23,"index":37},"parent":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\regexp-flags.js","resolved":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\an-object.js"}],"generated":{"js":"'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/internals/regexp-flags.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/core-js/internals/regexp-flags.js":"'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n"},"lineCount":18}},"error":null,"hash":"fd635fba27f22529d94b40c72f85ea83","cacheData":{"env":{}}}