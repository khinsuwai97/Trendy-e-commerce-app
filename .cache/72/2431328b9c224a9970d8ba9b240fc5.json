{"id":"node_modules/core-js/internals/to-positive-integer.js","dependencies":[{"name":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\package.json","includedInParent":true,"mtime":1652088393021},{"name":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1652087954091},{"name":"../internals/global","loc":{"line":1,"column":21,"index":21},"parent":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\to-positive-integer.js","resolved":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":2,"column":34,"index":79},"parent":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\to-positive-integer.js","resolved":"D:\\Computer Programming Course\\JS Exercis myself\\Trendy E-commerc App\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"}],"generated":{"js":"\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}}],"sources":{"node_modules/core-js/internals/to-positive-integer.js":"var global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"},"lineCount":12}},"error":null,"hash":"c5b8df524db944dd911a105c5b8003e1","cacheData":{"env":{}}}